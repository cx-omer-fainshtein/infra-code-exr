pipeline {
    agent {
        kubernetes {
            inheritFrom 'worker-pod'
            defaultContainer 'worker'
        }
    }
    triggers {
        cron('*/5 * * * *') // Run every 5 minutes
    }
    stages {
        stage('Create Pod and Run Timestamp Update') {
            steps {
                script {
                    echo "✅ Job triggered. Creating timestamp update pod..."

                    // Create the pod with the mounted secret
                    sh '''
                    cat <<EOF | kubectl apply -f -
apiVersion: v1
kind: Pod
metadata:
  name: timestamp-creation-job
  namespace: postgresql
spec:
  restartPolicy: Never
  volumes:
    - name: postgres-secret
      secret:
        secretName: postgres-secret
  containers:
    - name: worker
      image: postgres:latest
      command:
        - "/bin/sh"
        - "-c"
        - |
          echo "🔍 Checking secrets in /mnt/secrets/";
          ls -l /mnt/secrets/

          echo "📖 Reading DB credentials...";
          DB_PASS=$(cat /mnt/secrets/postgres-password)
          echo "db pass from mnt: $DB_PASS"
          DB_NAME=postgres
          DB_HOST="postgresql.postgresql.svc.cluster.local"

          echo "⏳ Updating timestamp in PostgreSQL...";
          PGPASSWORD="$DB_PASS" psql -h "$DB_HOST" -U postgres -d "$DB_NAME" -c "
            CREATE TABLE IF NOT EXISTS timestamps (
                id SERIAL PRIMARY KEY,
                updated_at TIMESTAMP DEFAULT NOW()
            );
            INSERT INTO timestamps (updated_at) VALUES (NOW());
          "
          echo "✅ Timestamp updated!"
EOF
                    '''

                    // Wait for pod to complete
                    timeout(time: 2, unit: 'MINUTES') {
                        waitUntil {
                            def podStatus = sh(script: "kubectl get pod timestamp-creation-job -n postgresql -o jsonpath='{.status.phase}'", returnStdout: true).trim()
                            return podStatus == "Succeeded" || podStatus == "Failed"
                        }
                    }

                    echo "🧹 Cleaning up pod..."
                    sh "kubectl delete pod timestamp-creation-job -n postgresql || true"

                    echo "🎉 Job completed successfully!"
                }
            }
        }
    }
}
