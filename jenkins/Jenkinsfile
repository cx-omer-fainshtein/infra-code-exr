pipeline {
    agent none
    triggers {
        cron('*/5 * * * *') // Run every 5 minutes
    }
    stages {
        stage('Run in Worker Pod') {
            agent {
                kubernetes {
                    inheritFrom 'worker-pod'
                    defaultContainer 'worker'
                    yaml """
apiVersion: v1
kind: Pod
metadata:
  generateName: timestamp-creation-job-
spec:
  restartPolicy: Never
  volumes:
    - name: postgres-secret-volume
      secret:
        secretName: postgres-secret
  containers:
    - name: worker
      image: postgres:latest  # Use the latest version
      command:
        - "/bin/sh"
        - "-c"
        - |
          echo "üîç Checking secrets in /mnt/secrets/";
          ls -l /mnt/secrets/  # Debugging: Print secret contents

          echo "üìñ Reading DB credentials...";
          DB_PASS=\$(cat /mnt/secrets/postgres-password)
          echo "db pass from mnt: \${DB_PASS}"
          DB_NAME=postgres
          DB_HOST="postgres-postgresql.database.svc.cluster.local"

          echo "üõ†Ô∏è Ensuring 'timestamps' table exists...";
          PGPASSWORD="\${DB_PASS}" psql -h "\${DB_HOST}" -U postgres -d "\${DB_NAME}" -c "CREATE TABLE IF NOT EXISTS timestamps (id SERIAL PRIMARY KEY, updated_at TIMESTAMP DEFAULT NOW());"

          echo "‚è≥ Inserting new timestamp...";
          PGPASSWORD="\${DB_PASS}" psql -h "\${DB_HOST}" -U postgres -d "\${DB_NAME}" -c "INSERT INTO timestamps (updated_at) VALUES (NOW());"

          echo "‚úÖ Timestamp updated!"
          exit 0
      volumeMounts:
        - name: postgres-secret-volume
          mountPath: /mnt/secrets
          readOnly: true
"""
                }
            }
            steps {
                script {
                    echo "‚úÖ Job triggered. Running timestamp update..."
                }
            }
        }
    }
}

