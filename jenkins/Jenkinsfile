pipeline {
    agent none
    triggers {
        cron('*/5 * * * *') // Run every 5 minutes
    }
    stages {
        stage('Run in Worker Pod') {
            agent {
                kubernetes {
                    inheritFrom 'worker-pod'
                    defaultContainer 'worker'
                    yaml '''
apiVersion: v1
kind: Pod
metadata:
  name: timestamp-creation-job
spec:
  restartPolicy: Never
  volumes:
    - name: postgres-secret
      secret:
        secretName: postgres-secret
  containers:
    - name: worker
      image: postgres:latest  # Use the latest version
      command:
        - "/bin/sh"
        - "-c"
        - |
          echo "üîç Checking secrets in /mnt/secrets/";
          ls -l /mnt/secrets/  # Debugging: Print secret contents

          echo "üìñ Reading DB credentials...";
          DB_PASS=$(cat /mnt/secrets/postgres-password)
          echo "db pass from mnt: $DB_PASS"
          DB_NAME=postgres
          DB_HOST="postgresql.postgresql.svc.cluster.local"

          echo "‚è≥ Updating timestamp in PostgreSQL...";
          PGPASSWORD="t3s7l25E8I" psql -h "$DB_HOST" -U postgres -d "$DB_NAME" -c "
            CREATE TABLE IF NOT EXISTS timestamps (
                id SERIAL PRIMARY KEY,
                updated_at TIMESTAMP DEFAULT NOW()
            );
            INSERT INTO timestamps (updated_at) VALUES (NOW());
          "

          echo "‚úÖ Timestamp updated!"
          exit 0
'''
                }
            }
            steps {
                script {
                    echo "‚úÖ Job triggered. Running timestamp update..."

                    // Wait for pod completion
                    timeout(time: 2, unit: 'MINUTES') {
                        waitUntil {
                            def podStatus = sh(script: "kubectl get pod timestamp-creation-job -o jsonpath='{.status.phase}'", returnStdout: true).trim()
                            return podStatus == "Succeeded" || podStatus == "Failed"
                        }
                    }

                    echo "üßπ Cleaning up pod..."
                    sh "kubectl delete pod timestamp-creation-job || true"

                    echo "üéâ Job completed successfully!"
                }
            }
        }
    }
}
